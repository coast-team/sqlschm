Schema(
    tables=[
        Table(
            name=["contact_groups"],
            columns=[
                Column(
                    name="contact_id",
                    type=Type(name="INTEGER", params=[]),
                    not_null=False,
                    autoincrement=False,
                    generated=False,
                    default=None,
                    collation=None,
                ),
                Column(
                    name="group_id",
                    type=Type(name="INTEGER", params=[]),
                    not_null=False,
                    autoincrement=False,
                    generated=False,
                    default=None,
                    collation=None,
                ),
            ],
            constraints=[
                Uniqueness(
                    name=None,
                    indexed=[
                        Indexed(column="contact_id", collation=None, sorting=None),
                        Indexed(column="group_id", collation=None, sorting=None),
                    ],
                    is_primary=True,
                    on_conflict=OnConflict.ABORT,
                ),
                ForeignKey(
                    name=None,
                    columns=["contact_id"],
                    foreign_table=["contacts"],
                    referred_columns=["contact_id"],
                    on_delete=OnUpdateDelete.CASCADE,
                    on_update=OnUpdateDelete.NO_ACTION,
                    enforcement=ConstraintEnforcement(
                        initially_deferred=False, not_deferrable=False
                    ),
                ),
                ForeignKey(
                    name=None,
                    columns=["group_id"],
                    foreign_table=["GROUPS"],
                    referred_columns=["group_id"],
                    on_delete=OnUpdateDelete.CASCADE,
                    on_update=OnUpdateDelete.NO_ACTION,
                    enforcement=ConstraintEnforcement(
                        initially_deferred=False, not_deferrable=False
                    ),
                ),
            ],
            options=TableOptions(strict=False, without_rowid=False),
            if_not_exists=False,
            or_replace=False,
            temporary=False,
        ),
        Table(
            name=["contacts"],
            columns=[
                Column(
                    name="contact_id",
                    type=Type(name="INTEGER", params=[]),
                    not_null=False,
                    autoincrement=False,
                    generated=False,
                    default=None,
                    collation=None,
                )
            ],
            constraints=[
                Uniqueness(
                    name=None,
                    indexed=[
                        Indexed(column="contact_id", collation=None, sorting=None)
                    ],
                    is_primary=True,
                    on_conflict=OnConflict.ABORT,
                )
            ],
            options=TableOptions(strict=False, without_rowid=False),
            if_not_exists=False,
            or_replace=False,
            temporary=False,
        ),
        Table(
            name=["GROUPS"],
            columns=[
                Column(
                    name="group_id",
                    type=Type(name="INTEGER", params=[]),
                    not_null=False,
                    autoincrement=False,
                    generated=False,
                    default=None,
                    collation=None,
                )
            ],
            constraints=[
                Uniqueness(
                    name=None,
                    indexed=[Indexed(column="group_id", collation=None, sorting=None)],
                    is_primary=True,
                    on_conflict=OnConflict.ABORT,
                )
            ],
            options=TableOptions(strict=False, without_rowid=False),
            if_not_exists=False,
            or_replace=False,
            temporary=False,
        ),
    ]
)
